<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
    <line>
      <![CDATA[element IS PRESENT]]>
    </line>
    <line>
      <![CDATA[title IS VERIFIED]]>
    </line>
    <line>
      <![CDATA[title IS VERIFIED]]>
    </line>
    <line>
      <![CDATA[title IS VERIFIED]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="120211" started-at="2019-04-05T07:43:32Z" finished-at="2019-04-05T07:45:32Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="120211" started-at="2019-04-05T07:43:32Z" finished-at="2019-04-05T07:45:32Z">
      <class name="script.ValidLoginLogout">
        <test-method status="PASS" signature="openApp()[pri:0, instance:script.ValidLoginLogout@614ddd49]" name="openApp" is-config="true" duration-ms="20460" started-at="2019-04-05T07:44:18Z" finished-at="2019-04-05T07:44:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="PASS" signature="testValidLoginLogout()[pri:0, instance:script.ValidLoginLogout@614ddd49]" name="testValidLoginLogout" duration-ms="14493" started-at="2019-04-05T07:44:38Z" finished-at="2019-04-05T07:44:53Z">
          <reporter-output>
            <line>
              <![CDATA[title IS VERIFIED]]>
            </line>
            <line>
              <![CDATA[title IS VERIFIED]]>
            </line>
          </reporter-output>
        </test-method> <!-- testValidLoginLogout -->
        <test-method status="PASS" signature="closeApp()[pri:0, instance:script.ValidLoginLogout@614ddd49]" name="closeApp" is-config="true" duration-ms="4630" started-at="2019-04-05T07:44:53Z" finished-at="2019-04-05T07:44:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.ValidLoginLogout -->
      <class name="script.InvalidLogin">
        <test-method status="PASS" signature="openApp()[pri:0, instance:script.InvalidLogin@76707e36]" name="openApp" is-config="true" duration-ms="31334" started-at="2019-04-05T07:43:32Z" finished-at="2019-04-05T07:44:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="PASS" signature="testInvalidLogin()[pri:0, instance:script.InvalidLogin@76707e36]" name="testInvalidLogin" duration-ms="10361" started-at="2019-04-05T07:44:03Z" finished-at="2019-04-05T07:44:13Z">
          <reporter-output>
            <line>
              <![CDATA[element IS PRESENT]]>
            </line>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method status="PASS" signature="closeApp()[pri:0, instance:script.InvalidLogin@76707e36]" name="closeApp" is-config="true" duration-ms="4263" started-at="2019-04-05T07:44:13Z" finished-at="2019-04-05T07:44:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.InvalidLogin -->
      <class name="script.VerifyVersion">
        <test-method status="PASS" signature="openApp()[pri:0, instance:script.VerifyVersion@1f554b06]" name="openApp" is-config="true" duration-ms="16029" started-at="2019-04-05T07:44:57Z" finished-at="2019-04-05T07:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="FAIL" signature="testVerifyVersion()[pri:0, instance:script.VerifyVersion@1f554b06]" name="testVerifyVersion" duration-ms="16140" started-at="2019-04-05T07:45:13Z" finished-at="2019-04-05T07:45:29Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Version: Orangehrm OS 4.3] but found [Version: Orangehrm OS 4.2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Version: Orangehrm OS 4.3] but found [Version: Orangehrm OS 4.2]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at pom.HomePage.orangeVersion(HomePage.java:56)
at script.VerifyVersion.testVerifyVersion(VerifyVersion.java:33)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[title IS VERIFIED]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyVersion -->
        <test-method status="PASS" signature="closeApp()[pri:0, instance:script.VerifyVersion@1f554b06]" name="closeApp" is-config="true" duration-ms="2456" started-at="2019-04-05T07:45:29Z" finished-at="2019-04-05T07:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.VerifyVersion -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
